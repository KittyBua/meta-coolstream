
# These two options control how much parallelism BitBake should use. The first 
# option determines how many tasks bitbake should run in parallel:
#
BB_NUMBER_THREADS ?= "4"
# 
# The second option controls how many processes make should run in parallel when
# running compile tasks:
#
PARALLEL_MAKE ?= "-j 4"
#
# For a quad-core machine, BB_NUMBER_THREADS = "4", PARALLEL_MAKE = "-j 4" would
# be appropriate for example.

#
# Where to place downloads
#
# During a first build the system will download many different source code tarballs
# from various upstream projects. This can take a while, particularly if your network
# connection is slow. These are all stored in DL_DIR. When wiping and rebuilding you
# can preserve this directory to speed up this part of subsequent builds. This directory
# is safe to share between multiple builds on the same machine too.
#
# The default is a downloads directory under TOPDIR which is the build directory.
#

DL_DIR ?= "${TOPDIR}/yocto-downloads"

#
# Where to place shared-state files
#
# BitBake has the capability to accelerate builds based on previously built output.
# This is done using "shared state" files which can be thought of as cache objects
# and this option determines where those files are placed.
#
# You can wipe out TMPDIR leaving this directory intact and the build would regenerate
# from these files if no changes were made to the configuration. If changes were made
# to the configuration, only shared state files where the state was still valid would
# be used (done using checksums).
#
# The default is a sstate-cache directory under TOPDIR.

SSTATE_DIR = "${TOPDIR}/sstate-cache"
#
# Where to place the build output
#
# This option specifies where the bulk of the building work should be done and
# where BitBake should place its temporary files and output. Keep in mind that
# this includes the extraction and compilation of many applications and the toolchain
# which can use Gigabytes of hard disk space.
#
# The default is a tmp directory under TOPDIR.
#
#TMPDIR = "${TOPDIR}/tmp"

DISTRO ?= "poky"

PACKAGE_CLASSES ?= "package_ipk"

#SDKMACHINE ?= "i686"
SDKMACHINE = "x86_64"

EXTRA_IMAGE_FEATURES = "debug-tweaks"
IMAGE_FEATURES = "package-management"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"
PRSERV_HOST = "localhost:0"

# Disk Space Monitoring during the build

BB_DISKMON_DIRS = "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K" 

# Qemu configuration

PACKAGECONFIG_pn-qemu-native = "sdl"
ASSUME_PROVIDED += "libsdl-native"

CONF_VERSION = "1"







# Machine Selection
#
# You need to select a specific machine to target the build with. There are a selection
# of emulated machines available which can boot and run in the QEMU emulator:

# This sets the default machine to be qemux86 if no other machine is selected. Possible values are coolstream-hd1 or coolstream-hd2

MACHINE ?= "coolstream-hd2"

# Choose your Boxtype (only Coolstream-HD2). Possible values are kronos or apollo:

BOXTYPE ?="kronos"

# If your Boxtype is apollo, choose your Boxmodel. Possible values are tank or trinity:

BOXMODEL ?= "tank"


DEFAULT_TIMEZONE = "Europe/Berlin"

# add Image Maintainer here

CREATOR = "Johnny Walker"

IMAGE_INSTALL_append += ""



